import{_ as i}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as d,c as l,a as e,d as a,b as t,w as s,e as r}from"./app-I-0oNmCg.js";const c={},p=r(`<p>First of all, specify the name of the bot, the name of which you need to check the user. Or leave the option blank to get the default bot.</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-php line-numbers-mode" data-ext="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token doc-comment comment">/**
 * Set up a basic configuration first
 * Add other bots if needed
 */</span>

<span class="token variable">$bot</span> <span class="token operator">=</span> <span class="token variable">$tgWebValid</span><span class="token operator">-&gt;</span><span class="token function">bot</span><span class="token punctuation">(</span>
  <span class="token argument-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;secondary&#39;</span> 
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters" aria-hidden="true">#</a> Parameters</h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name" aria-hidden="true">#</a> <code>name</code></h3><ul><li>Type: <code>string</code></li><li>Required: No</li></ul><p>By specifying the name, you will get access to the multibot added in the previous step.</p>`,7),h={class:"hint-container warning"},u=e("p",{class:"hint-container-title"},"Warning",-1),m=e("h2",{id:"validators",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#validators","aria-hidden":"true"},"#"),a(" Validators")],-1),v=e("p",null,"Next, you need to decide on the type of authentication that needs to be done.",-1);function b(f,_){const n=o("RouterLink");return d(),l("div",null,[p,e("div",h,[u,e("p",null,[a("If you specify a bot name but don't add it, we'll be forced to throw a "),t(n,{to:"/en/docs/exception/bot.html"},{default:s(()=>[a("BotException")]),_:1}),a(" in order to maintain integrity")])]),m,v,e("p",null,[a("The list of available validators can be found on "),t(n,{to:"/en/docs/validator/"},{default:s(()=>[a("this page")]),_:1})])])}const x=i(c,[["render",b],["__file","usage.html.vue"]]);export{x as default};
