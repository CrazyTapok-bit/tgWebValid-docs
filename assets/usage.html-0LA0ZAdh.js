import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o as i,c as r,a as e,d as a,b as n,w as s,e as c}from"./app-CKRzqze-.js";const p={},d=c(`<p>首先，指定机器人的名称，您需要检查用户的名称。 或者将该选项留空以获取默认机器人。</p><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>例子</span></a></h2><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token doc-comment comment">/**
 * 首先设置基本配置
 * 如果需要，添加其他机器人
 */</span>

<span class="token doc-comment comment">/** 我使用默认机器人 */</span>
<span class="token variable">$bot</span> <span class="token operator">=</span> <span class="token variable">$tgWebValid</span><span class="token operator">-&gt;</span><span class="token function">bot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/** 或者，指定我想要使用哪个机器人 */</span>
<span class="token variable">$bot</span> <span class="token operator">=</span> <span class="token variable">$tgWebValid</span><span class="token operator">-&gt;</span><span class="token function">bot</span><span class="token punctuation">(</span>
  <span class="token argument-name">name</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">&#39;secondary&#39;</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>参数</span></a></h2><h3 id="name" tabindex="-1"><a class="header-anchor" href="#name"><span><code>name</code></span></a></h3><ul><li>类型: <code>string</code></li><li>必需的: 不</li></ul><p>通过指定名称，您将可以访问上一步中添加的多功能机器人。</p>`,7),m={class:"hint-container warning"},u=e("p",{class:"hint-container-title"},"注意",-1),h=e("h2",{id:"validators",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#validators"},[e("span",null,"验证者")])],-1),g=e("p",null,"接下来，您需要决定需要完成的身份验证类型。",-1);function v(b,k){const t=l("RouteLink");return i(),r("div",null,[d,e("div",m,[u,e("p",null,[a("如果您指定机器人名称但不添加它，我们将被迫抛出 "),n(t,{to:"/zh/docs/exception/bot.html"},{default:s(()=>[a("BotException")]),_:1}),a(" 以保持完整性")])]),h,g,e("p",null,[a("可用验证器的列表可以在 "),n(t,{to:"/zh/docs/validator/"},{default:s(()=>[a("此页面")]),_:1}),a(" 上找到")])])}const y=o(p,[["render",v],["__file","usage.html.vue"]]),x=JSON.parse('{"path":"/zh/docs/get-started/usage.html","title":"用法","lang":"zh-CN","frontmatter":{"title":"用法","icon":"play","order":4,"description":"首先，指定机器人的名称，您需要检查用户的名称。 或者将该选项留空以获取默认机器人。 例子 参数 name 类型: string 必需的: 不 通过指定名称，您将可以访问上一步中添加的多功能机器人。 注意 如果您指定机器人名称但不添加它，我们将被迫抛出 以保持完整性 验证者 接下来，您需要决定需要完成的身份验证类型。 可用验证器的列表可以在 上找到","head":[["link",{"rel":"alternate","hreflang":"uk-ua","href":"https://tgwebvalid.com/docs/get-started/usage.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://tgwebvalid.com/en/docs/get-started/usage.html"}],["meta",{"property":"og:url","content":"https://tgwebvalid.com/zh/docs/get-started/usage.html"}],["meta",{"property":"og:site_name","content":"用于验证 Telegram 用户的 PHP 库"}],["meta",{"property":"og:title","content":"用法"}],["meta",{"property":"og:description","content":"首先，指定机器人的名称，您需要检查用户的名称。 或者将该选项留空以获取默认机器人。 例子 参数 name 类型: string 必需的: 不 通过指定名称，您将可以访问上一步中添加的多功能机器人。 注意 如果您指定机器人名称但不添加它，我们将被迫抛出 以保持完整性 验证者 接下来，您需要决定需要完成的身份验证类型。 可用验证器的列表可以在 上找到"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"uk-UA"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-19T06:43:02.000Z"}],["meta",{"property":"article:author","content":"Mr. Anonymous"}],["meta",{"property":"article:modified_time","content":"2024-04-19T06:43:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"用法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-19T06:43:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Anonymous\\",\\"url\\":\\"https://github.com/CrazyTapok-bit\\"}]}"]]},"headers":[{"level":2,"title":"例子","slug":"example","link":"#example","children":[]},{"level":2,"title":"参数","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"name","slug":"name","link":"#name","children":[]}]},{"level":2,"title":"验证者","slug":"validators","link":"#validators","children":[]}],"git":{"createdTime":1713508982000,"updatedTime":1713508982000,"contributors":[{"name":"Сергій","email":"61122611+CrazyTapok-bit@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.7,"words":211},"filePathRelative":"zh/docs/get-started/usage.md","localizedDate":"2024年4月19日","autoDesc":true}');export{y as comp,x as data};
