import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as n,o as l,c,a as e,d as t,b as a,w as d,e as i}from"./app-CBs6Aohp.js";const h={},p=i('<h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties"><span>Properties</span></a></h2><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span><code>id</code></span></a></h3><ul><li><strong>Type:</strong> <code>int</code></li></ul><p>Unique user ID. This number can have 32-52 significant bits. Therefore, a 64-bit signed integer or double-precision float type is safe to store this identifier.</p><h3 id="firstname" tabindex="-1"><a class="header-anchor" href="#firstname"><span><code>firstName</code></span></a></h3><ul><li><strong>Type:</strong> <code>string</code></li></ul><p>First name of the user.</p><h3 id="lastname" tabindex="-1"><a class="header-anchor" href="#lastname"><span><code>lastName</code></span></a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p><em>Optional.</em> Last name of the user.</p><h3 id="username" tabindex="-1"><a class="header-anchor" href="#username"><span><code>username</code></span></a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p><em>Optional.</em> Username of the user.</p><h3 id="photourl" tabindex="-1"><a class="header-anchor" href="#photourl"><span><code>photoUrl</code></span></a></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p><em>Optional.</em> URL of the user’s profile photo. The photo can be in <code>.jpeg</code> or <code>.svg</code> formats.</p><h3 id="authdate" tabindex="-1"><a class="header-anchor" href="#authdate"><span><code>authDate</code></span></a></h3>',17),u=e("strong",null,"Type:",-1),g={href:"https://carbon.nesbot.com/docs/",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,"CarbonInterface",-1),f=i('<p>A date interface for obtaining the time of opening a form in <code>Unix</code> format, and not only that.</p><h3 id="hash" tabindex="-1"><a class="header-anchor" href="#hash"><span><code>hash</code></span></a></h3><ul><li><strong>Type:</strong> <code>string</code></li></ul><p>A hash of all passed parameters, with which the validator can check their validity.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods"><span>Methods</span></a></h2><h3 id="toarray" tabindex="-1"><a class="header-anchor" href="#toarray"><span><code>toArray</code></span></a></h3><p>Returns the entity, including children (if any), as an array.</p>',7),y={href:"https://core.telegram.org/widgets/login#receiving-authorization-data",target:"_blank",rel:"noopener noreferrer"};function b(_,T){const r=n("RouteLink"),o=n("ExternalLinkIcon");return l(),c("div",null,[e("p",null,[t("This object contains the data returned after successful authentication with "),a(r,{to:"/en/docs/validator/login-widget.html"},{default:d(()=>[t("login widget")]),_:1}),t(".")]),p,e("ul",null,[e("li",null,[u,t(),e("a",g,[m,a(o)])])]),f,e("p",null,[e("a",y,[t("Created on the basis of official documentation"),a(o)])])])}const x=s(h,[["render",b],["__file","login-widget.html.vue"]]),w=JSON.parse('{"path":"/en/docs/entity/login-widget.html","title":"LoginWidget","lang":"en-US","frontmatter":{"title":"LoginWidget","icon":"object-group","order":2,"description":"This object contains the data returned after successful authentication with . Properties id Type: int Unique user ID. This number can have 32-52 significant bits. Therefore, a 6...","head":[["link",{"rel":"alternate","hreflang":"uk-ua","href":"https://tgwebvalid.com/docs/entity/login-widget.html"}],["meta",{"property":"og:url","content":"https://tgwebvalid.com/en/docs/entity/login-widget.html"}],["meta",{"property":"og:site_name","content":"The PHP library for validate Telegram users"}],["meta",{"property":"og:title","content":"LoginWidget"}],["meta",{"property":"og:description","content":"This object contains the data returned after successful authentication with . Properties id Type: int Unique user ID. This number can have 32-52 significant bits. Therefore, a 6..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"uk-UA"}],["meta",{"property":"og:updated_time","content":"2024-01-05T07:23:15.000Z"}],["meta",{"property":"article:author","content":"Mr. Anonymous"}],["meta",{"property":"article:modified_time","content":"2024-01-05T07:23:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LoginWidget\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-05T07:23:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Anonymous\\",\\"url\\":\\"https://github.com/CrazyTapok-bit\\"}]}"]]},"headers":[{"level":2,"title":"Properties","slug":"properties","link":"#properties","children":[{"level":3,"title":"id","slug":"id","link":"#id","children":[]},{"level":3,"title":"firstName","slug":"firstname","link":"#firstname","children":[]},{"level":3,"title":"lastName","slug":"lastname","link":"#lastname","children":[]},{"level":3,"title":"username","slug":"username","link":"#username","children":[]},{"level":3,"title":"photoUrl","slug":"photourl","link":"#photourl","children":[]},{"level":3,"title":"authDate","slug":"authdate","link":"#authdate","children":[]},{"level":3,"title":"hash","slug":"hash","link":"#hash","children":[]}]},{"level":2,"title":"Methods","slug":"methods","link":"#methods","children":[{"level":3,"title":"toArray","slug":"toarray","link":"#toarray","children":[]}]}],"git":{"createdTime":1704439395000,"updatedTime":1704439395000,"contributors":[{"name":"Сергій","email":"61122611+CrazyTapok-bit@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":0.57,"words":171},"filePathRelative":"en/docs/entity/login-widget.md","localizedDate":"January 5, 2024","autoDesc":true}');export{x as comp,w as data};
