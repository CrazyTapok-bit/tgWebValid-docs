import{_ as r}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as i,c as d,a as e,d as o,b as a,e as s}from"./app-VP7VGO3X.js";const l={},c=s('<p>This object contains the user data of the Mini App.</p><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="id" tabindex="-1"><a class="header-anchor" href="#id" aria-hidden="true">#</a> <code>id</code></h3><ul><li><strong>Type:</strong> <code>int</code></li></ul><p>The unique identifier of the user or bot. This number can have 32-52 significant bits. Therefore, a 64-bit signed integer or double-precision floating-point type is safe to store this identifier.</p><h3 id="isbot" tabindex="-1"><a class="header-anchor" href="#isbot" aria-hidden="true">#</a> <code>isBot</code></h3><ul><li><strong>Type:</strong> <code>bool</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> <code>true</code>, if this user is a bot.</p><h3 id="firstname" tabindex="-1"><a class="header-anchor" href="#firstname" aria-hidden="true">#</a> <code>firstName</code></h3><ul><li><strong>Type:</strong> <code>string</code></li></ul><p>First name of the user.</p><h3 id="lastname" tabindex="-1"><a class="header-anchor" href="#lastname" aria-hidden="true">#</a> <code>lastName</code></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> Last name of the user.</p><h3 id="username" tabindex="-1"><a class="header-anchor" href="#username" aria-hidden="true">#</a> <code>username</code></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> Username of the user.</p><h3 id="languagecode" tabindex="-1"><a class="header-anchor" href="#languagecode" aria-hidden="true">#</a> <code>languageCode</code></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> IETF language tag of the user&#39;s language.</p><h3 id="ispremium" tabindex="-1"><a class="header-anchor" href="#ispremium" aria-hidden="true">#</a> <code>isPremium</code></h3><ul><li><strong>Type:</strong> <code>bool</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> <code>true</code>, if this user is a Telegram Premium user</p><h3 id="allowswritetopm" tabindex="-1"><a class="header-anchor" href="#allowswritetopm" aria-hidden="true">#</a> <code>allowsWriteToPm</code></h3><ul><li><strong>Type:</strong> <code>bool</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> <code>true</code>, if this user has allowed the bot to send them messages.</p><h3 id="addedtoattachmentmenu" tabindex="-1"><a class="header-anchor" href="#addedtoattachmentmenu" aria-hidden="true">#</a> <code>addedToAttachmentMenu</code></h3><ul><li><strong>Type:</strong> <code>bool</code></li><li><strong>Default:</strong> <code>null</code></li></ul><p>_<em>Optional.</em> <code>true</code>, if this user added the bot to the attachment menu.</p><h3 id="photourl" tabindex="-1"><a class="header-anchor" href="#photourl" aria-hidden="true">#</a> <code>photoUrl</code></h3><ul><li><strong>Type:</strong> <code>string</code></li><li><strong>Default:</strong> <code>null</code></li></ul>',31),h=e("em",null,"Optional.",-1),u=e("code",null,".jpeg",-1),p=e("code",null,".svg",-1),m={href:"https://core.telegram.org/bots/webapps#adding-bots-to-the-attachment-menu",target:"_blank",rel:"noopener noreferrer"},g=e("h2",{id:"methods",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#methods","aria-hidden":"true"},"#"),o(" Methods")],-1),f=e("h3",{id:"toarray",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#toarray","aria-hidden":"true"},"#"),o(),e("code",null,"toArray")],-1),_=e("p",null,"Returns the entity, including children (if any), as an array.",-1),b={href:"https://core.telegram.org/bots/webapps#webappuser",target:"_blank",rel:"noopener noreferrer"};function T(x,y){const t=n("ExternalLinkIcon");return i(),d("div",null,[c,e("p",null,[o("_"),h,o(" URL of the userâ€™s profile photo. The photo can be in "),u,o(" or "),p,o(" formats. Only returned for web applications launched from "),e("a",m,[o("attachment menu"),a(t)]),o(".")]),g,f,_,e("p",null,[e("a",b,[o("Created on the basis of official documentation"),a(t)])])])}const D=r(l,[["render",T],["__file","user.html.vue"]]);export{D as default};
