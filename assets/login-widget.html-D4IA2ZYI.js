import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o as l,c as p,a as t,d as e,b as n,w as c,e as o}from"./app-BhufcmzB.js";const d={},u=t("code",null,"HMAC-SHA-256",-1),h=t("code",null,"SHA256",-1),m={href:"https://core.telegram.org/widgets/login#checking-authorization",target:"_blank",rel:"noopener noreferrer"},g=o(`<h2 id="example" tabindex="-1"><a class="header-anchor" href="#example"><span>例子</span></a></h2><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$bot</span><span class="token operator">-&gt;</span><span class="token function">validateLoginWidget</span><span class="token punctuation">(</span>
  <span class="token argument-name">user</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>
      <span class="token string single-quoted-string">&#39;auth_date&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1679130118</span><span class="token punctuation">,</span>
      <span class="token string single-quoted-string">&#39;first_name&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;Сергій&#39;</span><span class="token punctuation">,</span>
      <span class="token comment">// 其他领域</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token keyword">throw</span><span class="token punctuation">:</span> <span class="token constant boolean">true</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>💡 验证成功后，该方法将返回可在您的服务器上使用的所有现有用户数据。</p><h2 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>参数</span></a></h2><h3 id="user" tabindex="-1"><a class="header-anchor" href="#user"><span><code>user</code></span></a></h3><ul><li>类型: <code>array</code></li><li>必需的: 是的</li></ul><p>授权小部件返回的原始用户数据数组。</p>`,7),k={href:"https://core.telegram.org/widgets/login#receiving-authorization-data",target:"_blank",rel:"noopener noreferrer"},v=o('<h3 id="throw" tabindex="-1"><a class="header-anchor" href="#throw"><span><code>throw</code></span></a></h3><ul><li>类型: <code>bool</code></li><li>Requi必需的red: 不</li><li>默认: <code>null</code>. 应用默认设置</li></ul><p>如果设置为 <code>true</code>，则如果验证失败，库将引发异常。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果您计划处理异常，请务必使用 <code>try/catch</code> 😉</p><p>如果启用了异常，则在验证失败后您将收到 [ValidationException] 异常(../exception/validation.md)。 否则，将返回 <code>false</code>。</p></div>',4);function _(b,f){const a=s("ExternalLinkIcon"),i=s("RouteLink");return l(),p("div",null,[t("p",null,[e("我们通过将接收到的哈希参数与数据验证字符串的 "),u,e(" 签名的十六进制表示形式以及用作密钥的机器人令牌的 "),h,e(" 哈希进行比较来验证接收到的数据的身份验证和完整性 。 详细信息 "),t("a",m,[e("此处"),n(a)])]),t("p",null,[e("🚀 完整的代码示例可在 "),n(i,{to:"/zh/docs/example/login-winget.html"},{default:c(()=>[e("此页面")]),_:1})]),g,t("p",null,[t("a",k,[e("附加信息"),n(a)])]),v])}const x=r(d,[["render",_],["__file","login-widget.html.vue"]]),A=JSON.parse('{"path":"/zh/docs/validator/login-widget.html","title":"登录小部件","lang":"zh-CN","frontmatter":{"title":"登录小部件","icon":"right-to-bracket","order":2,"head":[["meta",{"name":"description","content":"使用 TgWebValid 库安全地验证 PHP 项目中的 Telegram Login Widget 用户。"}],["link",{"rel":"alternate","hreflang":"uk-ua","href":"https://tgwebvalid.com/docs/validator/login-widget.html"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://tgwebvalid.com/en/docs/validator/login-widget.html"}],["meta",{"property":"og:url","content":"https://tgwebvalid.com/zh/docs/validator/login-widget.html"}],["meta",{"property":"og:site_name","content":"用于验证 Telegram 用户的 PHP 库"}],["meta",{"property":"og:title","content":"登录小部件"}],["meta",{"property":"og:description","content":"我们通过将接收到的哈希参数与数据验证字符串的 HMAC-SHA-256 签名的十六进制表示形式以及用作密钥的机器人令牌的 SHA256 哈希进行比较来验证接收到的数据的身份验证和完整性 。 详细信息 此处 🚀 完整的代码示例可在 例子 💡 验证成功后，该方法将返回可在您的服务器上使用的所有现有用户数据。 参数 user 类型: array 必需的:..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"uk-UA"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-19T06:43:02.000Z"}],["meta",{"property":"article:author","content":"Mr. Anonymous"}],["meta",{"property":"article:modified_time","content":"2024-04-19T06:43:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"登录小部件\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-19T06:43:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr. Anonymous\\",\\"url\\":\\"https://github.com/CrazyTapok-bit\\"}]}"]],"description":"我们通过将接收到的哈希参数与数据验证字符串的 HMAC-SHA-256 签名的十六进制表示形式以及用作密钥的机器人令牌的 SHA256 哈希进行比较来验证接收到的数据的身份验证和完整性 。 详细信息 此处 🚀 完整的代码示例可在 例子 💡 验证成功后，该方法将返回可在您的服务器上使用的所有现有用户数据。 参数 user 类型: array 必需的:..."},"headers":[{"level":2,"title":"例子","slug":"example","link":"#example","children":[]},{"level":2,"title":"参数","slug":"parameters","link":"#parameters","children":[{"level":3,"title":"user","slug":"user","link":"#user","children":[]},{"level":3,"title":"throw","slug":"throw","link":"#throw","children":[]}]}],"git":{"createdTime":1713508982000,"updatedTime":1713508982000,"contributors":[{"name":"Сергій","email":"61122611+CrazyTapok-bit@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":1.02,"words":307},"filePathRelative":"zh/docs/validator/login-widget.md","localizedDate":"2024年4月19日","autoDesc":true}');export{x as comp,A as data};
